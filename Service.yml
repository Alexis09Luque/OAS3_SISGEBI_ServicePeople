openapi: '3.0.2'
info:
  title: People Service 
  description: This service allows for control of the system's people
  version: "1.0"
  contact:
    name: Juan Alexis Luque Ayala
    email: juan.luque.ayala@gmail.com
servers:
  - url:  https://people-service-api.herokuapp.com/

tags:
  - name: Employee
    description: Everything about employee
  - name: Applicant
    description: Everything about applicant
        
paths:
  #Modulo de Escuela
  /employees:
    get:
      tags:
        - Employee    
      summary: Find all employees
      operationId: listEmployees
      responses:            
        '200':
          $ref: components/responses/responses.yml#/ShowEmployees         
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
          
          
    post:
      tags:
        - Employee    
      summary: Add a new employee to the system
      operationId: addEmployee
      requestBody:
        description: Employee to add to the system
        content:
          application/json:
            schema:
              $ref: components/schemas/payloads/payload.yml#/EmployeePayload
      responses:      
        '201':
          $ref: components/responses/responses.yml#/CreatedEmployee         
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity 

    

  /employees/{id}:
    get:
      tags:
        - Employee
      summary: Find an Employee
      operationId: findEmployee
      parameters:
        - $ref: components/parameters/parameters.yml#/id
      responses:
        '200':
          $ref: components/responses/responses.yml#/ShowEmployee      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
    put: 
      tags:
        - Employee
      summary: Update an existing Employee
      operationId: updateEmployee
      parameters: 
        - $ref: components/parameters/parameters.yml#/id
      requestBody:
        description: Employee to update to the system
        content:
          x-www-form-urlencoded:
            schema:
              $ref: components/schemas/payloads/payload.yml#/EmployeePayload
      responses:
        '201':
          $ref: components/responses/responses.yml#/CreatedEmployee     
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity           

    delete:
      tags:
        - Employee
      summary: Delete an existing employee
      operationId: deleteEmployee
      parameters:
        - $ref: components/parameters/parameters.yml#/id
      responses:
        '200':
          $ref: components/responses/responses.yml#/DeleteEmployee      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 

  /employees/pagination:
    get:
      tags:
        - Employee
      summary: Recover a certain number of employees per page
      operationId: pagEmployee
      parameters:
        - $ref: components/parameters/parameters.yml#/page
        - $ref: components/parameters/parameters.yml#/limit
      responses:
        '200':
          $ref: components/responses/responses.yml#/ShowEmployeesPerPage      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated


  /employees/search:
    get:
      tags:
        - Employee
      summary: Search of employees for certain parameter
      operationId: searchEmployee
      parameters:
        - $ref: components/parameters/parameters.yml#/page
        - $ref: components/parameters/parameters.yml#/limit
        - $ref: components/parameters/parameters.yml#/dni
        - $ref: components/parameters/parameters.yml#/name
        - $ref: components/parameters/parameters.yml#/surname
      responses:
        '200':
          $ref: components/responses/responses.yml#/SearchEmployeesPerPage      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated

#Modulo de Applicant
  /applicants:
    get:
      tags:
        - Applicant    
      summary: Find all applicants
      operationId: listApplicants
      responses:            
        '200':
          $ref: components/responses/responses.yml#/ShowApplicants          
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
          
          
    post:
      tags:
        - Applicant    
      summary: Add a new applicant to the system
      operationId: addApplicant
      requestBody:
        description: Applicant to add to the system
        content:
          application/json:
            schema:
              $ref: components/schemas/payloads/payload.yml#/ApplicantPayload
      responses:      
        '201':
          $ref: components/responses/responses.yml#/CreatedApplicant          
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity 

  /applicants/{id}:
    get:
      tags:
        - Applicant
      summary: Find an applicant
      operationId: findApplicant
      parameters:
        - $ref: components/parameters/parameters.yml#/id
      responses:
        '200':
          $ref: components/responses/responses.yml#/ShowApplicant      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
    put: 
      tags:
        - Applicant
      summary: Update an existing applicant
      operationId: updateApplicant
      parameters: 
        - $ref: components/parameters/parameters.yml#/id
      requestBody:
        description: Applicant to update to the system
        content:
          x-www-form-urlencoded:
            schema:
              $ref: components/schemas/payloads/payload.yml#/ApplicantPayload
      responses:
        '201':
          $ref: components/responses/responses.yml#/CreatedApplicant    
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity           

    delete:
      tags:
        - Applicant
      summary: Delete an existing applicant
      operationId: deleteApplicant
      parameters:
        - $ref: components/parameters/parameters.yml#/id
      responses:
        '200':
          $ref: components/responses/responses.yml#/DeleteApplicant      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity 

  /applicants/pagination:
    get:
      tags:
        - Applicant
      summary: Recover a certain number of applicants per page
      operationId: pagApplicant
      parameters:
        - $ref: components/parameters/parameters.yml#/page
        - $ref: components/parameters/parameters.yml#/limit
      responses:
        '200':
          $ref: components/responses/responses.yml#/ShowApplicantsPerPage      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated


  /applicants/search:
    get:
      tags:
        - Applicant
      summary: Search of applicants for certain parameter
      operationId: searchApplicant
      parameters:
        - $ref: components/parameters/parameters.yml#/page
        - $ref: components/parameters/parameters.yml#/limit
        - $ref: components/parameters/parameters.yml#/dni
        - $ref: components/parameters/parameters.yml#/name
        - $ref: components/parameters/parameters.yml#/surname
      responses:
        '200':
          $ref: components/responses/responses.yml#/SearchApplicantsPerPage      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated
        
          

# Aplicar la API key globalmente a todas las operaciones 
security:
  - Authorization: [PDQFWb29LPWcf0gsUJpeZksVjUSf7Jnc]
            

components:
      
  # SECURITY
  # Contiene todos los tipos de seguridad para el uso del servicio  
  securitySchemes:
    # AUTHORIZATION:
    # Permite el uso del servicio mediante el registro de una api key enviado en el header
    # con el nombre Authorization, por ejemplo: Authorization EJm9IExSA9rv3N9uCVfIhNRdNOMUSe8w
    # estas cadenas serán colocadas en el archivo de configuración del servicio y restringido mediante un middleware
    Authorization:
      type: apiKey
      name: Authorization
      in: header 